## UDP port on which to listen for syslog messages sent from haproxy
## Required
port: 9003

## The IP & port of redis server used to store request stats across
## all instances in the cluster. Every syslog server instance should
## point to the same redis server so that data can be correctly aggregated.
## Has the form <hostname-or-ip-address>:<port-number>
## Required
redis_server: localhost:9004

## The interval (an integer quantity in seconds) at which the redis
## connection is checked and re-initiated if necessary.
## Required
redis_check_conn_interval_sec: 30

## The path to the log file written by the syslog server.
## May be an absolute path or a path relative to the syslog server's
## runtime working directory.
## If no value is specified, logs will be written to stdout.
# log_file_name: /workspace/logs/syslog_server.log

## The path to the access log file written by the syslog server.
## HAProxy messages not matching any action will be logged here.
## If no value is specified, logs will be written to stdout.
# access_log_file_name: /workspace/logs/syslog_server_access.log

## The (integer) number of seconds for which request & data-transmission
## stats are kept in redis after they are no longer needed.
## Required
redis_qos_ttl: 2

## The (integer) number of seconds for which active connection stats are
## kept in redis after they are no longer needed.
## Required
redis_qos_conn_ttl: 30

## The maximum number of entries in the request and incoming-data processing
## queues. Older pending entries will be dropped if the queue exceeds this size.
## Optional
# msg_queue_size: 1048576

## The 'endpoint' string used to identify distinct subsets of traffic to be limited.
## The actual value isn't important but it should not contain a dollar symbol ($).
## For example you might have separate endpoints for dev & prod, or data-centre-1
## and data-centre-2. Limits with different endpoints operate independently.
## Required
endpoint: localdev.dockerdc

## The number of server processes spawned internally to consume UDP
## syslog data from haproxy. More processes is more resource-intensive
## but is less likely to miss/drop messages when under heavy load.
## Optional.
# num_of_syslog_servers: 1

## Control messages from HAProxy are batched/pre-aggregated together before
## being sent to redis to avoid overwhelming it during high load.
## We enforce upper-bounds on both the number of messages in a batch and the
## delay between submission of different batches to redis.
## These parameters define those two limits on batch size.
## Optional
# metrics_batch_count: 250000
# metrics_batch_period_msec: 31

## The minimum level at which log messages are output.
## Logging calls with lower severity are ignored.
## Options are: debug, info, warning, error
## Optional
# log_level: info
